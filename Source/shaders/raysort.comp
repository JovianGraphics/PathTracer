#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_shader_16bit_storage : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable

layout(local_size_x = 1, local_size_y = 32, local_size_z = 1) in;

#include "structures.glsl"

layout(binding = 0) uniform Constants {
    mat4 viewMtx;
    mat4 projMtx;
    mat4 viewInvMtx;
    mat4 projInvMtx;
    vec2 viewportSize;
    vec2 viewportBase;
    uint numLights;
    uint numTriangles;
    uint frameIndex;
    uint numRays;
	uint currentDepth;
    uint numBVHNodes;
};

layout(std430, binding = 9) buffer stackBuffer
{
    RayStackBuffer stack[];
};

layout(std430, binding = 10) buffer jobBuffer
{
    JobDesc jobGrid[];
};

void main()
{
    uint count = 0;

    uint baseIndex = gl_GlobalInvocationID.y * uint(viewportSize.x) + gl_GlobalInvocationID.x * 32;
    uint maxIndex = min(baseIndex + 32, gl_GlobalInvocationID.y * uint(viewportSize.x) + uint(viewportSize.x));

    vec3 firstDir = vec3(0.0);

    for (uint x = baseIndex; x < maxIndex; x++)
    {
        if (jobGrid[x].index != 0xFFFFFFFF)
        {
            JobDesc job = jobGrid[x];

            jobGrid[baseIndex + count] = job;
            count++;
        }
    }

    for (uint i = baseIndex + count; i < maxIndex; i++) jobGrid[i].index = 0xFFFFFFFF;
}
